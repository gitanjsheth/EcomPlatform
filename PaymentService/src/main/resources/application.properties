spring.application.name=PaymentService

# Server Configuration
server.port=8084

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/paymentserviceproj
spring.datasource.username=gitanjsheth
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=payment-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Service URLs
app.order-service.url=http://localhost:8083

# Payment Gateway Configuration (Environment Variables in Production)
app.payment.gateway.api-key=${PAYMENT_GATEWAY_API_KEY:test-api-key-dev}
app.payment.gateway.secret=${PAYMENT_GATEWAY_SECRET:test-secret-dev}
app.payment.gateway.webhook-secret=${PAYMENT_WEBHOOK_SECRET:test-webhook-secret}
app.payment.gateway.base-url=${PAYMENT_GATEWAY_URL:https://api.payment-gateway.com}

# Internal Service Authentication
app.service.token=${INTERNAL_SERVICE_TOKEN:internal-service-secret-2024}

# Payment Configuration
app.payment.default-currency=USD
app.payment.timeout-seconds=300
app.payment.retry-attempts=3

# Logging
logging.level.com.gitanjsheth.paymentservice=DEBUG